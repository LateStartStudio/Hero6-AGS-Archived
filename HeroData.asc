
HeroData heroinfo;
HeroData fighterData;
HeroData mageData;
HeroData thiefData;
export heroinfo;
export fighterData;
export mageData;
export thiefData;

function SetMaxHealth() { heroinfo.hp = heroinfo.mhp; }
function SetMaxStamina() { heroinfo.sp = heroinfo.msp; }

function SetMaxMagic() {
  if (heroinfo.magic <= 0) {
    heroinfo.mmp = 0;
    heroinfo.mp = 0;
  } else {
    heroinfo.mp = heroinfo.mmp;
  }
}

function RefreshMaxHealthStat() {
  heroinfo.mhp = ceiling((IntToFloat(heroinfo.str) * 0.4) + (IntToFloat(heroinfo.vit) * 0.6) * 2.0);
}

function RefreshMaxStaminaStat() {
  heroinfo.msp = ceiling((IntToFloat(heroinfo.agi) * 0.6) + (IntToFloat(heroinfo.vit) * 0.4) * 2.0);
}

function RefreshMaxMagicStat() {
  if (heroinfo.magic <= 0) {
    heroinfo.mmp = 0;
    heroinfo.mp = 0;
  } else {
    heroinfo.mmp = ceiling((IntToFloat(heroinfo.Int) * 0.4) + (IntToFloat(heroinfo.magic) * 0.6) * 2.0);
  }
}

/** 
 * Implementation of struct HeroData Initialization 
 */
function HeroData::Init(){
  heroinfo.hp = 150;
	heroinfo.mhp = 150;
	heroinfo.sp = 150;
	
	heroinfo.gold = 11;
	
	heroinfo.class = CLASS_FIGHTER;
	heroinfo.str=40;
	heroinfo.Int=20;
	heroinfo.agi=45;
	heroinfo.vit=50;
	heroinfo.luck=30;
	heroinfo.weaponuse=50;
	heroinfo.parry=30;
	heroinfo.dodge=30;
	heroinfo.climb=30;
	heroinfo.magic=70;
	heroinfo.stealth = 10;
	
	RefreshMaxHealthStat();
	RefreshMaxMagicStat();
	RefreshMaxStaminaStat();
	SetMaxHealth();
	SetMaxStamina();
	SetMaxMagic();
}

function game_start() {    
	heroinfo.Init(); // init stats
}
