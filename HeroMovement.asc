
bool runningMode;
export runningMode;

bool sneakingMode;
export sneakingMode;

float alertLevel;
export alertLevel;

float regionNoise = 0.1;
export regionNoise;  

bool isInRunningMode() {
  return runningMode;
}

function SetRunningMode(short mode) {
  sneakingMode = false;
  cEgo.StopMoving();
  if ((mode == 1) && (cEgo.WalkSpeedX <= 4)){
		runningMode = true;
    mouse.ChangeModeGraphic(eModeWalkto, 2340);
    cEgo.LockView(HERO_RUN);
		cEgo.SetWalkSpeed(8, 8);
    
  } else if ((mode == 0) && (cEgo.WalkSpeedX > 4)){
		runningMode = false;
    mouse.ChangeModeGraphic(eModeWalkto, 29);
		cEgo.SetWalkSpeed(4, 4);	
		cEgo.UnlockView(); 
  }
  /*This function was intended to be a recursive toggle for walk/run
    Switched it to simple conditional with the addition of unique
    icons for walking and running - Robert Kety*/
	else if (mode == 2) {
	  if (runningMode)
      SetRunningMode(0);
	  else
      SetRunningMode(1);
	}	
}

function SetSneakingMode(short mode) {
  runningMode = false;
  cEgo.StopMoving();
  if (mode == 1) {
		sneakingMode = true;
		cEgo.SetWalkSpeed(3, 3);
		cEgo.LockView(HERO_SNEAK);
		} else if (mode == 0) {
		sneakingMode = false;
		cEgo.SetWalkSpeed(4, 4);	
    cEgo.UnlockView();
  } else if (mode == 2) { // toggle
	  if (sneakingMode)
      SetSneakingMode(0);
	  else
      SetSneakingMode(1);
	}  
}

int GetModeView() {
  cEgo.AnimationSpeed = 1;
  if (!runningMode && !sneakingMode) {
    SetSneakingMode(0);
    SetRunningMode(0);
		return HEROVIEW;
	} else if (runningMode) {
    SetRunningMode(1);
		return HERO_RUN;
	} else if (sneakingMode) {
    SetSneakingMode(1);
		return HERO_SNEAK;
	}
}

function heroCollapse() {
  cEgo.LockView(HERO_COLLAPSE);
  cEgo.Animate(0, 2, eOnce, eBlock, eForwards);
}
